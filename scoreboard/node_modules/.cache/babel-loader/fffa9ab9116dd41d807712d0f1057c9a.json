{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projekty Github\\\\treeHouse-React-\\\\scoreboard\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Provider } from './Context';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [{\n        name: \"Guil\",\n        score: 0,\n        id: 1\n      }, {\n        name: \"Treasure\",\n        score: 0,\n        id: 2\n      }, {\n        name: \"Ashley\",\n        score: 0,\n        id: 3\n      }, {\n        name: \"James\",\n        score: 0,\n        id: 4\n      }]\n    };\n\n    this.getHighScore = () => {\n      const scores = this.state.players.map(p => p.score);\n      let higestScore = Math.max(...scores);\n\n      if (higestScore) {\n        return higestScore;\n      }\n\n      return null;\n    };\n\n    this.handleRemovePlayer = id => {\n      this.setState(prevState => {\n        return {\n          players: prevState.players.filter(p => p.id !== id)\n        };\n      });\n    };\n\n    this.prevPlayerId = 4;\n\n    this.handleChangeScore = (delta, index) => {\n      this.setState(prevState => ({\n        score: prevState.players[index].score += delta\n      }));\n    };\n\n    this.addPlayerMethod = name => {\n      this.setState(prevState => {\n        console.log(prevState.players);\n        return {\n          players: [...prevState.players, {\n            name,\n            score: 0,\n            id: this.prevPlayerId += 1\n          }]\n        };\n      });\n    };\n  }\n\n  render() {\n    let highestScore = this.getHighScore();\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scoreboard\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          players: this.state.players\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), this.state.players.map((player, index) => {\n          return /*#__PURE__*/_jsxDEV(Player, {\n            name: player.name,\n            id: player.id,\n            score: player.score,\n            index: index,\n            handleChangeScore: this.handleChangeScore,\n            removePlayer: this.handleRemovePlayer,\n            isHighestScore: highestScore === player.score\n          }, player.id.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(AddPlayerForm, {\n          addPlayer: this.addPlayerMethod\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Projekty Github/treeHouse-React-/scoreboard/src/components/App.js"],"names":["React","Component","Provider","Header","Player","AddPlayerForm","App","state","players","name","score","id","getHighScore","scores","map","p","higestScore","Math","max","handleRemovePlayer","setState","prevState","filter","prevPlayerId","handleChangeScore","delta","index","addPlayerMethod","console","log","render","highestScore","player","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Provider } from './Context';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\n\n\n\nclass App extends Component {\n  state = {\n    players: [\n      {\n        name: \"Guil\",\n        score:0,\n        id: 1\n      },\n      {\n        name: \"Treasure\",\n        score:0,\n        id: 2\n      },\n      {\n        name: \"Ashley\",\n        score:0,\n        id: 3\n      },\n      {\n        name: \"James\",\n        score:0,\n        id: 4\n      }\n    ]\n  };\n  getHighScore = () => {\n    const scores = this.state.players.map( p => p.score );\n    let higestScore=Math.max(...scores);\n    if(higestScore)\n    {\n      return higestScore\n    }\n    return null\n  }\n\n  handleRemovePlayer = (id) => {\n    this.setState( prevState => {\n      return {\n        players: prevState.players.filter(p => p.id !== id)\n      };\n    });\n  }\n  prevPlayerId=4; \n\n  handleChangeScore = (delta,index) => {\n    this.setState( prevState => ({\n        score: prevState.players[index].score += delta\n      }));\n   \n    }\n   addPlayerMethod=(name)=>\n   {\n    this.setState( prevState =>{\n      console.log(prevState.players)\n      return{\n       players:[\n         ...prevState.players,\n         {\n        name,\n        score:0,\n        id:this.prevPlayerId+=1\n      }\n       ]\n    }})\n  }\n\n  render(){\n\n\n    let highestScore = this.getHighScore();\n\n    return (\n      <Provider>\n        <div className=\"scoreboard\">\n          <Header  players={this.state.players} />\n    \n          {/* Players list */}\n          \n          {this.state.players.map( (player,index) =>\n          {\n            return(\n            <Player \n              name={player.name}\n              id={player.id}\n              score={player.score}\n              key={player.id.toString()}\n              index={index}\n              handleChangeScore={this.handleChangeScore} \n              removePlayer={this.handleRemovePlayer} \n              isHighestScore={ highestScore === player.score}         \n            />)\n          })}\n          <AddPlayerForm addPlayer={this.addPlayerMethod}/>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}