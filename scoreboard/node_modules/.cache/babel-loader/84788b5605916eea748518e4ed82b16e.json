{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projekty Github\\\\treeHouse-React-\\\\scoreboard\\\\src\\\\components\\\\Counter.js\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { Consumer } from './Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = ({\n  score,\n  index\n}) => {\n  return /*#__PURE__*/_jsxDEV(Consumer, {\n    children: value => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counter-action decrement\",\n        onClick: () => value.actions.changeScore(-1, index),\n        children: \" - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter-score\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counter-action increment\",\n        onClick: () => value.actions.changeScore(1, index),\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Counter;\nCounter.propTypes = {\n  score: propTypes.number,\n  index: propTypes.number\n};\nexport default Counter;\n/*  add more proptypes in Header comp and also in Stats \r\nbut use arrayOf meth and shape to check a properties inside in object (array)\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["E:/Projekty Github/treeHouse-React-/scoreboard/src/components/Counter.js"],"names":["React","propTypes","Consumer","Counter","score","index","value","actions","changeScore","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,WAAvB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAD,KAChB;AACM,sBACE,QAAC,QAAD;AAAA,cACIC,KAAK,iBACL;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAE,MACpDA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0B,CAAC,CAA3B,EAA6BH,KAA7B,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,kBAAiCD;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAIE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA4C,QAAA,OAAO,EAAE,MACnDE,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0B,CAA1B,EAA4BH,KAA5B,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeH,CAjBH;;KAAMF,O;AAkBNA,OAAO,CAACF,SAAR,GACA;AACEG,EAAAA,KAAK,EAACH,SAAS,CAACQ,MADlB;AAEEJ,EAAAA,KAAK,EAACJ,SAAS,CAACQ;AAFlB,CADA;AAMC,eAAgBN,OAAhB;AAEA;AACD;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport {Consumer} from './Context';\r\n\r\nconst Counter = ({score,index}) =>\r\n{  \r\n      return (\r\n        <Consumer>\r\n          { value=>(\r\n            <div className=\"counter\">\r\n              <button className=\"counter-action decrement\" onClick={()=>\r\n                value.actions.changeScore(-1,index)}> - </button>\r\n                <span className=\"counter-score\">{score}</span>\r\n              <button className=\"counter-action increment\"onClick={()=>\r\n                value.actions.changeScore(1,index)} > + </button>\r\n            </div>) \r\n          }\r\n        </Consumer>\r\n        \r\n      );\r\n    \r\n  }\r\nCounter.propTypes=\r\n{\r\n  score:propTypes.number,\r\n  index:propTypes.number\r\n}\r\n\r\n export default  Counter;\r\n\r\n /*  add more proptypes in Header comp and also in Stats \r\n but use arrayOf meth and shape to check a properties inside in object (array)\r\n \r\n */ "]},"metadata":{},"sourceType":"module"}