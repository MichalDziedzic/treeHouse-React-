{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projekty Github\\\\treeHouse-React-\\\\scoreboard\\\\src\\\\components\\\\Player.js\";\nimport React, { PureComponent } from 'react';\nimport Counter from './Counter';\nimport PropTypes from 'prop-types';\nimport Icon from './Icon';\nimport { Consumer } from './Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Player extends PureComponent {\n  render() {\n    const {\n      name,\n      id,\n      score,\n      index,\n      isHighestScore\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Consumer, {\n      children: value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-player\",\n              onClick: () => value.actions.removePlayer(id),\n              children: \"\\u2716\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Icon, {\n              HighScore: isHighestScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 27\n            }, this), name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Counter, {\n            score: score,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nPlayer.propTypes = {\n  name: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  score: PropTypes.number.isRequired,\n  id: PropTypes.number\n};\nexport default Player;","map":{"version":3,"sources":["E:/Projekty Github/treeHouse-React-/scoreboard/src/components/Player.js"],"names":["React","PureComponent","Counter","PropTypes","Icon","Consumer","Player","render","name","id","score","index","isHighestScore","props","value","actions","removePlayer","propTypes","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,aAAd,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,QAAR,QAAuB,WAAvB;;;AACA,MAAMC,MAAN,SAAqBL,aAArB,CAAkC;AAGhCM,EAAAA,MAAM,GACN;AAEE,UAAM;AACFC,MAAAA,IADE;AAEFC,MAAAA,EAFE;AAGFC,MAAAA,KAHE;AAIFC,MAAAA,KAJE;AAKFC,MAAAA;AALE,QAMF,KAAKC,KANT;AAQA,wBAEM,QAAC,QAAD;AAAA,gBACGC,KAAK,IAAE;AACN,4BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA,oCACI;AAAQ,cAAA,SAAS,EAAC,eAAlB;AACE,cAAA,OAAO,EAAE,MAAMA,KAAK,CAACC,OAAN,CAAcC,YAAd,CAA2BP,EAA3B,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGM,QAAC,IAAD;AACE,cAAA,SAAS,EAAEG;AADb;AAAA;AAAA;AAAA;AAAA,oBAHN,EAMQJ,IANR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASY,QAAC,OAAD;AAAS,YAAA,KAAK,EAAEE,KAAhB;AACA,YAAA,KAAK,EAAGC;AADR;AAAA;AAAA;AAAA;AAAA,kBATZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAgBD;AAlBH;AAAA;AAAA;AAAA;AAAA,YAFN;AA0BD;;AAxC+B;;AAA5BL,M,CAyCIW,S,GACR;AACET,EAAAA,IAAI,EAACL,SAAS,CAACe,MAAV,CAAiBC,UADxB;AAEER,EAAAA,KAAK,EAACR,SAAS,CAACiB,MAFlB;AAGEV,EAAAA,KAAK,EAACP,SAAS,CAACiB,MAAV,CAAiBD,UAHzB;AAIEV,EAAAA,EAAE,EAACN,SAAS,CAACiB;AAJf,C;AAQA,eAAed,MAAf","sourcesContent":["import React,{PureComponent } from'react';\r\nimport Counter from'./Counter';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon';\r\nimport {Consumer} from './Context'\r\nclass Player extends PureComponent{\r\n\r\n \r\n  render()\r\n  {\r\n\r\n    const {\r\n        name,\r\n        id,\r\n        score,\r\n        index,\r\n        isHighestScore,\r\n    } = this.props;\r\n\r\n    return (\r\n        \r\n          <Consumer>\r\n            {value=>{\r\n              return(\r\n                <div className=\"player\">\r\n                    <span className=\"player-name\">\r\n                        <button className=\"remove-player\" \r\n                          onClick={() => value.actions.removePlayer(id)}>âœ–</button>\r\n                          <Icon\r\n                            HighScore={isHighestScore}\r\n                          /> \r\n                          { name }\r\n                            </span>\r\n                            <Counter score={score}  \r\n                            index ={index} \r\n                            />\r\n                    </div>\r\n                \r\n              )\r\n            }}\r\n            </Consumer>\r\n            )\r\n       \r\n            \r\n       \r\n  }\r\n   static propTypes =\r\n  {\r\n    name:PropTypes.string.isRequired,\r\n    index:PropTypes.number,\r\n    score:PropTypes.number.isRequired,\r\n    id:PropTypes.number,\r\n  }\r\n    \r\n  }\r\n  export default Player;"]},"metadata":{},"sourceType":"module"}