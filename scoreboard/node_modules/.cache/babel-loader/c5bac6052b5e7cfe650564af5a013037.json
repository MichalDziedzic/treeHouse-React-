{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projekty Github\\\\treeHouse-React-\\\\scoreboard\\\\src\\\\components\\\\Context\\\\index.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreboardContext = /*#__PURE__*/React.createContext();\nexport class Provider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [{\n        name: \"Guil\",\n        score: 0,\n        id: 1\n      }, {\n        name: \"Treasure\",\n        score: 0,\n        id: 2\n      }, {\n        name: \"Ashley\",\n        score: 0,\n        id: 3\n      }, {\n        name: \"James\",\n        score: 0,\n        id: 4\n      }]\n    };\n\n    this.getHighScore = () => {\n      const scores = this.state.players.map(p => p.score);\n      let higestScore = Math.max(...scores);\n\n      if (higestScore) {\n        return higestScore;\n      }\n\n      return null;\n    };\n\n    this.handleRemovePlayer = id => {\n      this.setState(prevState => {\n        return {\n          players: prevState.players.filter(p => p.id !== id)\n        };\n      });\n    };\n\n    this.prevPlayerId = 4;\n\n    this.handleChangeScore = (delta, index) => {\n      this.setState(prevState => ({\n        score: prevState.players[index].score += delta\n      }));\n    };\n\n    this.addPlayerMethod = name => {\n      this.setState(prevState => {\n        console.log(prevState.players);\n        return {\n          players: [...prevState.players, {\n            name,\n            score: 0,\n            id: this.prevPlayerId += 1\n          }]\n        };\n      });\n    };\n  }\n\n  render() {\n    let highestScore = this.getHighScore();\n    return /*#__PURE__*/_jsxDEV(ScoreboardContext.Provider, {\n      value: {\n        players: this.state.players,\n        actions: {\n          changeScore: this.handleChangeScore,\n          removePlayer: this.handleRemovePlayer,\n          highestScore,\n          addPlayer: this.addPlayerMethod\n        }\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const Consumer = ScoreboardContext.Consumer;","map":{"version":3,"sources":["E:/Projekty Github/treeHouse-React-/scoreboard/src/components/Context/index.js"],"names":["React","Component","ScoreboardContext","createContext","Provider","state","players","name","score","id","getHighScore","scores","map","p","higestScore","Math","max","handleRemovePlayer","setState","prevState","filter","prevPlayerId","handleChangeScore","delta","index","addPlayerMethod","console","log","render","highestScore","actions","changeScore","removePlayer","addPlayer","props","children","Consumer"],"mappings":"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","sourcesContent":["import React ,{ Component }from 'react';\r\n\r\nconst ScoreboardContext = React.createContext();\r\nexport class Provider extends Component {\r\n\r\n\r\n    state = {\r\n        players: [\r\n          {\r\n            name: \"Guil\",\r\n            score:0,\r\n            id: 1\r\n          },\r\n          {\r\n            name: \"Treasure\",\r\n            score:0,\r\n            id: 2\r\n          },\r\n          {\r\n            name: \"Ashley\",\r\n            score:0,\r\n            id: 3\r\n          },\r\n          {\r\n            name: \"James\",\r\n            score:0,\r\n            id: 4\r\n          }\r\n        ]\r\n      };\r\n\r\n      getHighScore = () => {\r\n        const scores = this.state.players.map( p => p.score );\r\n        let higestScore=Math.max(...scores);\r\n        if(higestScore)\r\n        {\r\n          return higestScore\r\n        }\r\n        return null\r\n      }\r\n    \r\n      handleRemovePlayer = (id) => {\r\n        this.setState( prevState => {\r\n          return {\r\n            players: prevState.players.filter(p => p.id !== id)\r\n          };\r\n        });\r\n      }\r\n      prevPlayerId=4; \r\n    \r\n      handleChangeScore = (delta,index) => {\r\n        this.setState( prevState => ({\r\n            score: prevState.players[index].score += delta\r\n          }));\r\n       \r\n        }\r\n       addPlayerMethod=(name)=>\r\n       {\r\n        this.setState( prevState =>{\r\n          console.log(prevState.players)\r\n          return{\r\n           players:[\r\n             ...prevState.players,\r\n             {\r\n            name,\r\n            score:0,\r\n            id:this.prevPlayerId+=1\r\n          }\r\n           ]\r\n        }})\r\n      }\r\n    \r\n    render() {\r\n        let highestScore = this.getHighScore();\r\n        return(\r\n            <ScoreboardContext.Provider value={{\r\n                players:this.state.players,\r\n                actions:{\r\n                    changeScore:this.handleChangeScore,\r\n                    removePlayer:this.handleRemovePlayer,\r\n                    highestScore,\r\n                    addPlayer:this.addPlayerMethod,\r\n                  }    \r\n                }}> \r\n                 {this.props.children} \r\n                \r\n                </ScoreboardContext.Provider>\r\n        )\r\n    }\r\n}\r\nexport  const Consumer = ScoreboardContext.Consumer\r\n"]},"metadata":{},"sourceType":"module"}