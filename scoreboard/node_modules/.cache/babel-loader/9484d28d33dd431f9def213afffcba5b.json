{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projekty Github\\\\treeHouse-React-\\\\scoreboard\\\\src\\\\components\\\\PlayerList.js\";\nimport React from 'react';\nimport Player from './Player';\nimport { Consumer } from './Context';\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayerList = () => {\n  return /*#__PURE__*/_jsxDEV(Consumer, {\n    children: ({\n      players\n    }) => {\n      return players.map((player, index) => /*#__PURE__*/_createElement(Player, { ...player,\n        key: player.id.toString(),\n        index: index,\n        isHighestScore: value.actions.highestScore === player.score,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 34\n        }\n      }));\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 19\n  }, this);\n};\n\n_c = PlayerList;\nexport default PlayerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"sources":["E:/Projekty Github/treeHouse-React-/scoreboard/src/components/PlayerList.js"],"names":["React","Player","Consumer","PlayerList","players","map","player","index","id","toString","value","actions","highestScore","score"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,QAAR,QAAuB,WAAvB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,sBACc,QAAC,QAAD;AAAA,cAEQ,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAa;AACT,aACAA,OAAO,CAACC,GAAR,CAAY,CAACC,MAAD,EAAQC,KAAR,kBAET,eAAC,MAAD,OACOD,MADP;AAEG,QAAA,GAAG,EAAEA,MAAM,CAACE,EAAP,CAAUC,QAAV,EAFR;AAGG,QAAA,KAAK,EAAEF,KAHV;AAIG,QAAA,cAAc,EAAGG,KAAK,CAACC,OAAN,CAAcC,YAAd,KAA+BN,MAAM,CAACO,KAJ1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,CADA;AAUH;AAbT;AAAA;AAAA;AAAA;AAAA,UADd;AAoBH,CArBD;;KAAMV,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport Player from './Player';\r\nimport {Consumer} from './Context';\r\n\r\nconst PlayerList = () => {\r\n    return (\r\n                  <Consumer>\r\n                      {\r\n                          ({players})=>{\r\n                              return(\r\n                              players.map((player,index)=>\r\n                              (\r\n                                 <Player \r\n                                    {...player}\r\n                                    key={player.id.toString()}\r\n                                    index={index} \r\n                                    isHighestScore={ value.actions.highestScore === player.score}         \r\n                                /> \r\n                              )))\r\n                          }\r\n                      }\r\n                    </Consumer>\r\n             )\r\n            \r\n    \r\n}\r\n\r\nexport default PlayerList\r\n"]},"metadata":{},"sourceType":"module"}